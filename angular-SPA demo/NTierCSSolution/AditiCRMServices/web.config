<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Verbose,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="d:\000 - modern web training\demos\ntiercssolution\aditicrmservices\web_messages.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelMessageLoggingListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
      <add initializeData="d:\000 - modern web training\demos\ntiercssolution\aditicrmservices\web_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  <connectionStrings>
    <add connectionString="data source=.;initial catalog=AditiTrainingDB;integrated security=sspi;"
         name="AditiTrainingDB"
         providerName="System.Data.SqlClient"/>
  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient"
                type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <unity configSource="UnityConfiguration.config" />

  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logKnownPii="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
      <endToEndTracing propagateActivity="true" activityTracing="true"
        messageFlowTracing="true" />
    </diagnostics>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata httpsGetEnabled="true"/>
          <serviceCredentials>
            <serviceCertificate findValue="localhost"
                                storeLocation="LocalMachine"
                                storeName="My"
                                x509FindType="FindBySubjectName"/>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
                                    cacheLogonTokens="true"
                                    cachedLogonTokenLifetime="00:10:00"
                                    maxCachedLogonTokens="255"
                                    includeWindowsGroups="false"
                                    customUserNamePasswordValidatorType="Aditi.Libraries.SOA.Security.Authentication.AditiAuthenticationManager, Aditi.Libraries.SOA.Security.Authentication"/>
            <issuedTokenAuthentication allowUntrustedRsaIssuers="true"
                                       certificateValidationMode="None"
                                       revocationMode="NoCheck" />
          </serviceCredentials>
          <serviceAuthorization serviceAuthorizationManagerType="Aditi.Libraries.SOA.Security.Authorization.AditiAuthorizationManager, Aditi.Libraries.SOA.Security.Authorization" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <wsHttpBinding>
        <binding>
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"
                     establishSecurityContext="true"
                     negotiateServiceCredential="false"/>
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>

    <services>
      <service name="Aditi.Libraries.SOA.Impl.CustomerService">
        <endpoint name="CustomerServiceEndpoint"
                  binding="wsHttpBinding"
                  contract="Aditi.Libraries.SOA.Contracts.Services.ICustomerService" />
        <host>
          <timeouts openTimeout="00:00:30" closeTimeout="00:00:30"/>
        </host>
      </service>
    </services>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true">
      <serviceActivations>
        <add factory="Aditi.Libraries.SOA.Extensibility.AditiInstancingServiceHostFactory"
             relativeAddress="CustomerService.svc"
             service="Aditi.Libraries.SOA.Impl.CustomerService"/>
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>

</configuration>
